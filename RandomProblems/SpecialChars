/*
3120. Count the Number of Special Characters I

You are given a string word. A letter is called special if it appears both in lowercase and uppercase in word.

Return the number of special letters in word.

Example 1:
Input: word = "aaAbcBC"
Output: 3
Explanation:
The special characters in word are 'a', 'b', and 'c'.

Example 2:
Input: word = "abc"
Output: 0
Explanation:
No character in word appears in uppercase.

Example 3:
Input: word = "abBCab"
Output: 1
Explanation:
The only special character in word is 'b'.
*/

// Method 1:
public int numberOfSpecialChars(String word) {
     HashMap<Character, Integer> hmap = new HashMap<>();
    int count = 0;

    for (int i = 0; i < word.length(); i++) {
        char currentChar = word.charAt(i);
        if(Character.isUpperCase(currentChar)) {
            if(hmap.containsKey(Character.toLowerCase(currentChar))) {
                if(hmap.get(Character.toLowerCase(currentChar)) == 0) {
                    count += 1;
                    hmap.put(Character.toLowerCase(currentChar), 2);
                }
            } else {
                hmap.put(Character.toLowerCase(currentChar), -1);
            }
        } else {
            if(hmap.containsKey(currentChar)) {
                if(hmap.get(currentChar) == -1) {
                    count += 1;
                    hmap.put(currentChar, 2);
                }
            } else {
                hmap.put(currentChar, 0);
            }
        }
    }
    return count;
}

// Method 2(Efficient):
public int numberOfSpecialChars(String word) {
     boolean[] s = new boolean['z' + 1];
        for (int i = 0; i < word.length(); ++i) {
            s[word.charAt(i)] = true;
        }
        int ans = 0;
        for (int i = 0; i < 26; ++i) {
            if (s['a' + i] && s['A' + i]) {
                ++ans;
            }
        }
        return ans;
    }
